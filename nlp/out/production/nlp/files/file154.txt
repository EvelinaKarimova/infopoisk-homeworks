<!DOCTYPE html><html lang="en"><head>  <meta charset="utf-8">  <meta http-equiv="X-UA-Compatible" content="IE=edge">  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0">  <meta name="theme-color" content="#F5D76E"/>  <meta http-equiv="Referrer-Policy" content="same-origin">  <title>mailcow UI</title>  <link rel="stylesheet" href="/cache/f5de9e8852ca4cb030c034e6b6d6ae2a0a6f5c31.css">    <link rel="shortcut icon" href="/favicon.png" type="image/png">  <link rel="icon" href="/favicon.png" type="image/png"></head><body id="top"><div class="overlay"></div><form action="/" method="post" id="logout"><input type="hidden" name="logout"></form><div class="container"><div class="row">  <div class="col-md-offset-3 col-md-6">    <div class="panel panel-default panel-login">      <div class="panel-heading"><i class="bi bi-person-fill"></i> Login</div>      <div class="panel-body">        <div class="text-center mailcow-logo"><img src="/img/cow_mailcow.svg" alt="mailcow"></div>                <legend>mailcow UI</legend>                <form method="post" autofill="off">          <div class="form-group">            <label class="sr-only" for="login_user">Username</label>            <div class="input-group">              <div class="input-group-addon"><i class="bi bi-person-fill"></i></div>              <input name="login_user" autocorrect="off" autocapitalize="none" type="text" id="login_user" class="form-control" placeholder="Username" required="" autofocus="" autocomplete="username">            </div>          </div>          <div class="form-group">            <label class="sr-only" for="pass_user">Password</label>            <div class="input-group">              <div class="input-group-addon"><i class="bi bi-lock-fill"></i></div>              <input name="pass_user" type="password" id="pass_user" class="form-control" placeholder="Password" required="" autocomplete="current-password">            </div>          </div>          <div class="form-group" style="position: relative">            <div class="btn-group">              <div class="btn-group">                <button type="submit" class="btn btn-xs-lg btn-success" value="Login">Login</button>                <button type="button" class="btn btn-xs-lg btn-success dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">                  <span class="caret"></span>                </button>                <ul class="dropdown-menu">                  <li><a href="#" id="fido2-login" style="line-height:1.4;"><i class="bi bi-shield-fill-check"></i> FIDO2/WebAuthn</a></li>                </ul>              </div>            </div>                        <button type="button"  class="btn btn-xs-lg btn-default pull-right dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">            <span class="flag-icon flag-icon-en"></span> <span class="caret"></span>            </button>            <ul class="dropdown-menu pull-right login">                              <li>                  <a href="?lang=cs">                    <span class="flag-icon flag-icon-cs"></span>Čeština (Czech)                  </a>                </li>                              <li>                  <a href="?lang=da">                    <span class="flag-icon flag-icon-da"></span>Danish (Dansk)                  </a>                </li>                              <li>                  <a href="?lang=de">                    <span class="flag-icon flag-icon-de"></span>Deutsch (German)                  </a>                </li>                              <li class="active">                  <a href="?lang=en">                    <span class="flag-icon flag-icon-en"></span>English                  </a>                </li>                              <li>                  <a href="?lang=es">                    <span class="flag-icon flag-icon-es"></span>Español (Spanish)                  </a>                </li>                              <li>                  <a href="?lang=fi">                    <span class="flag-icon flag-icon-fi"></span>Suomi (Finish)                  </a>                </li>                              <li>                  <a href="?lang=fr">                    <span class="flag-icon flag-icon-fr"></span>Français (French)                  </a>                </li>                              <li>                  <a href="?lang=hu">                    <span class="flag-icon flag-icon-hu"></span>Magyar (Hungarian)                  </a>                </li>                              <li>                  <a href="?lang=it">                    <span class="flag-icon flag-icon-it"></span>Italiano (Italian)                  </a>                </li>                              <li>                  <a href="?lang=ko">                    <span class="flag-icon flag-icon-ko"></span>한국어 (Korean)                  </a>                </li>                              <li>                  <a href="?lang=lv">                    <span class="flag-icon flag-icon-lv"></span>latviešu (Latvian)                  </a>                </li>                              <li>                  <a href="?lang=nl">                    <span class="flag-icon flag-icon-nl"></span>Nederlands (Dutch)                  </a>                </li>                              <li>                  <a href="?lang=pl">                    <span class="flag-icon flag-icon-pl"></span>Język Polski (Polish)                  </a>                </li>                              <li>                  <a href="?lang=pt">                    <span class="flag-icon flag-icon-pt"></span>Português (Portuguese)                  </a>                </li>                              <li>                  <a href="?lang=ro">                    <span class="flag-icon flag-icon-ro"></span>Română (Romanian)                  </a>                </li>                              <li>                  <a href="?lang=ru">                    <span class="flag-icon flag-icon-ru"></span>Pусский (Russian)                  </a>                </li>                              <li>                  <a href="?lang=sk">                    <span class="flag-icon flag-icon-sk"></span>Slovenčina (Slovak)                  </a>                </li>                              <li>                  <a href="?lang=sv">                    <span class="flag-icon flag-icon-sv"></span>Svenska (Swedish)                  </a>                </li>                              <li>                  <a href="?lang=zh">                    <span class="flag-icon flag-icon-zh"></span>中文 (Chinese)                  </a>                </li>                          </ul>                        <div class="clearfix"></div>          </div>        </form>                <div id="fido2-alerts"></div>                <legend><i class="bi bi-link-45deg"></i> Apps</legend>        <div class="apps">                                  <div class="media-clearfix">              <a href="/SOGo/" role="button"  class="btn btn-primary btn-lg btn-block">Webmail</a>            </div>                                      </div>              </div>    </div>  </div>    <div class="col-md-offset-3 col-md-6">    <div class="panel panel-default">      <div class="panel-heading">        <a data-toggle="collapse" href="#collapse1"><i class="bi bi-patch-question-fill"></i> Show/Hide help panel</a>      </div>      <div id="collapse1" class="panel-collapse collapse">        <div class="panel-body">                    <p><span style="border-bottom: 1px dotted #999;">mailcow UI</span></p>          <p><b>Domain administrators</b> create, modify or delete mailboxes and aliases, change domains and read further information about their assigned domains.<br><b>Mailbox users</b> are able to create time-limited aliases (spam aliases), change their password and spam filter settings.</p>          <p><span style="border-bottom: 1px dotted #999;">Apps</span></p>          <p>Use a mailcow app to access your mails, calendar, contacts and more.</p>                  </div>      </div>    </div>  </div>  </div></div><div id="ConfirmDeleteModal" class="modal fade" role="dialog">  <div class="modal-dialog">    <div class="modal-content">      <div class="modal-header">        <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span></button>        <h3 class="modal-title">Confirm deletion</h3>      </div>      <div class="modal-body">        <p id="DeleteText">Please confirm your changes to the following object id</p>        <ul id="ItemsToDelete"></ul>        <hr>        <button class="btn btn-sm btn-xs-half visible-xs-block visible-sm-inline visible-md-inline visible-lg-inline btn-danger" id="IsConfirmed">Delete now</button>        <button class="btn btn-sm btn-xs-half visible-xs-block visible-sm-inline visible-md-inline visible-lg-inline btn-default" id="isCanceled">Cancel</button>        <div class="clearfix visible-xs"></div>      </div>    </div>  </div></div><script src="/cache/2a9efc0ccace1ada61e9d0e5c3d6111c352a11c4.js"></script><script>  var lang_footer = {"cancel":"Cancel","confirm_delete":"Confirm deletion","delete_now":"Delete now","delete_these_items":"Please confirm your changes to the following object id","hibp_check":"Check against haveibeenpwned.com","hibp_nok":"Matched! This is a potentially dangerous password!","hibp_ok":"No match found.","loading":"Please wait...","nothing_selected":"Nothing selected","restart_container":"Restart container","restart_container_info":"<b>Important:<\/b> A graceful restart may take a while to complete, please wait for it to finish.","restart_now":"Restart now","restarting_container":"Restarting container, this may take a while"};  var lang_acl = {"alias_domains":"Add alias domains","app_passwds":"Manage app passwords","bcc_maps":"BCC maps","delimiter_action":"Delimiter action","domain_desc":"Change domain description","domain_relayhost":"Change relayhost for a domain","eas_reset":"Reset EAS devices","extend_sender_acl":"Allow to extend sender ACL by external addresses","filters":"Filters","login_as":"Login as mailbox user","mailbox_relayhost":"Change relayhost for a mailbox","prohibited":"Prohibited by ACL","protocol_access":"Change protocol access","pushover":"Pushover","quarantine":"Quarantine actions","quarantine_attachments":"Quarantine attachments","quarantine_category":"Change quarantine notification category","quarantine_notification":"Change quarantine notifications","ratelimit":"Rate limit","recipient_maps":"Recipient maps","smtp_ip_access":"Change allowed hosts for SMTP","sogo_access":"Allow management of SOGo access","sogo_profile_reset":"Reset SOGo profile","spam_alias":"Temporary aliases","spam_policy":"Blacklist\/Whitelist","spam_score":"Spam score","syncjobs":"Sync jobs","tls_policy":"TLS policy","unlimited_quota":"Unlimited quota for mailboxes"};  var lang_tfa = {"api_register":"%s uses the Yubico Cloud API. Please get an API key for your key <a href=\"https:\/\/upgrade.yubico.com\/getapikey\/\" target=\"_blank\">here<\/a>","confirm":"Confirm","confirm_totp_token":"Please confirm your changes by entering the generated token","delete_tfa":"Disable TFA","disable_tfa":"Disable TFA until next successful login","enter_qr_code":"Your TOTP code if your device cannot scan QR codes","error_code":"Error code","init_u2f":"Initializing, please wait...","key_id":"An identifier for your YubiKey","key_id_totp":"An identifier for your key","none":"Deactivate","reload_retry":"- (reload browser if the error persists)","scan_qr_code":"Please scan the following code with your authenticator app or enter the code manually.","select":"Please select","set_tfa":"Set two-factor authentication method","start_u2f_validation":"Start validation","tfa":"Two-factor authentication","tfa_token_invalid":"TFA token invalid","totp":"Time-based OTP (Google Authenticator, Authy, etc.)","u2f":"U2F authentication","waiting_usb_auth":"<i>Waiting for USB device...<\/i><br><br>Please tap the button on your USB device now.","waiting_usb_register":"<i>Waiting for USB device...<\/i><br><br>Please enter your password above and confirm your registration by tapping the button on your USB device.","yubi_otp":"Yubico OTP authentication"};  var lang_fido2 = {"confirm":"Confirm","fido2_auth":"Login with FIDO2","fido2_success":"Device successfully registered","fido2_validation_failed":"Validation failed","fn":"Friendly name","known_ids":"Known IDs","none":"Disabled","register_status":"Registration status","rename":"Rename","set_fido2":"Register FIDO2 device","set_fido2_touchid":"Register Touch ID on Apple M1","set_fn":"Set friendly name","start_fido2_validation":"Start FIDO2 validation"};  var docker_timeout = 60 * 1000;$(window).scroll(function() {  sessionStorage.scrollTop = $(this).scrollTop();});// Select language and reopen active URL without POSTfunction setLang(sel) {  $.post( '/', {lang: sel} );  window.location.href = window.location.pathname + window.location.search;}// FIDO2 functionsfunction arrayBufferToBase64(buffer) {  let binary = '';  let bytes = new Uint8Array(buffer);  let len = bytes.byteLength;  for (let i = 0; i < len; i++) {    binary += String.fromCharCode( bytes[ i ] );  }  return window.btoa(binary);}function recursiveBase64StrToArrayBuffer(obj) {  let prefix = '=?BINARY?B?';  let suffix = '?=';  if (typeof obj === 'object') {    for (let key in obj) {      if (typeof obj[key] === 'string') {        let str = obj[key];        if (str.substring(0, prefix.length) === prefix && str.substring(str.length - suffix.length) === suffix) {          str = str.substring(prefix.length, str.length - suffix.length);          let binary_string = window.atob(str);          let len = binary_string.length;          let bytes = new Uint8Array(len);          for (let i = 0; i < len; i++) {            bytes[i] = binary_string.charCodeAt(i);          }          obj[key] = bytes.buffer;        }      } else {        recursiveBase64StrToArrayBuffer(obj[key]);      }    }  }  }  $(window).load(function() {    $(".overlay").hide();  });  $(document).ready(function() {    $(document).on('shown.bs.modal', function(e) {      modal_id = $(e.relatedTarget).data('target');      $(modal_id).attr("aria-hidden","false");    });    // TFA, CSRF, Alerts in footer.inc.php    // Other general functions in mailcow.js        // Confirm TFA modal      // Validate FIDO2  $("#fido2-login").click(function(){    $('#fido2-alerts').html();    if (!window.fetch || !navigator.credentials || !navigator.credentials.create) {      window.alert('Browser not supported.');      return;    }    window.fetch("/api/v1/get/fido2-get-args", {method:'GET',cache:'no-cache'}).then(function(response) {      return response.json();    }).then(function(json) {    if (json.success === false) {      throw new Error();    }    recursiveBase64StrToArrayBuffer(json);    return json;    }).then(function(getCredentialArgs) {      return navigator.credentials.get(getCredentialArgs);    }).then(function(cred) {      return {        id: cred.rawId ? arrayBufferToBase64(cred.rawId) : null,        clientDataJSON: cred.response.clientDataJSON  ? arrayBufferToBase64(cred.response.clientDataJSON) : null,        authenticatorData: cred.response.authenticatorData ? arrayBufferToBase64(cred.response.authenticatorData) : null,        signature : cred.response.signature ? arrayBufferToBase64(cred.response.signature) : null      };    }).then(JSON.stringify).then(function(AuthenticatorAttestationResponse) {      return window.fetch("/api/v1/process/fido2-args", {method:'POST', body: AuthenticatorAttestationResponse, cache:'no-cache'});    }).then(function(response) {      return response.json();    }).then(function(json) {      if (json.success) {        window.location = window.location.href.split("#")[0];  } else {    throw new Error();  }  }).catch(function(err) {    if (typeof err.message === 'undefined') {      mailcow_alert_box(lang_fido2.fido2_validation_failed, "danger");    } else {      mailcow_alert_box(lang_fido2.fido2_validation_failed + ":<br><i>" + err.message + "</i>", "danger");    }  });  });  // Set TFA/FIDO2  $("#register-fido2, #register-fido2-touchid").click(function(){    let t = $(this);    $("option:selected").prop("selected", false);    if (!window.fetch || !navigator.credentials || !navigator.credentials.create) {      window.alert('Browser not supported.');      return;    }    window.fetch("/api/v1/get/fido2-registration/null", {method:'GET',cache:'no-cache'}).then(function(response) {      return response.json();    }).then(function(json) {      if (json.success === false) {        throw new Error(json.msg);      }      recursiveBase64StrToArrayBuffer(json);      // set attestation to node if we are registering apple touch id      if(t.attr('id') === 'register-fido2-touchid') {        json.publicKey.attestation = 'none';        json.publicKey.authenticatorSelection.authenticatorAttachment = "platform";      }      return json;    }).then(function(createCredentialArgs) {      console.log(createCredentialArgs);      return navigator.credentials.create(createCredentialArgs);    }).then(function(cred) {      return {        clientDataJSON: cred.response.clientDataJSON  ? arrayBufferToBase64(cred.response.clientDataJSON) : null,        attestationObject: cred.response.attestationObject ? arrayBufferToBase64(cred.response.attestationObject) : null      };    }).then(JSON.stringify).then(function(AuthenticatorAttestationResponse) {      return window.fetch("/api/v1/add/fido2-registration", {method:'POST', body: AuthenticatorAttestationResponse, cache:'no-cache'});    }).then(function(response) {      return response.json();    }).then(function(json) {      if (json.success) {        window.location = window.location.href.split("#")[0];      } else {        throw new Error(json.msg);      }    }).catch(function(err) {      $('#fido2-alerts').html('<span class="text-danger"><b>' + err.message + '</b></span>');    });  });  $('#selectTFA').change(function () {    if ($(this).val() == "yubi_otp") {      $('#YubiOTPModal').modal('show');      $("option:selected").prop("selected", false);    }    if ($(this).val() == "totp") {      $('#TOTPModal').modal('show');      request_token = $('#tfa-qr-img').data('totp-secret');      $.ajax({        url: '/inc/ajax/qr_gen.php',        data: {          token: request_token,        },      }).done(function (result) {        $("#tfa-qr-img").attr("src", result);      });      $("option:selected").prop("selected", false);    }    if ($(this).val() == "u2f") {      $('#U2FModal').modal('show');      $("option:selected").prop("selected", false);      $("#start_u2f_register").click(function(){        $('#u2f_return_code').html('');        $('#u2f_return_code').hide();        $('#u2f_status_reg').html('<p><i class="bi bi-arrow-repeat icon-spin"></i> ' + lang_tfa.init_u2f + '</p>');        $.ajax({          type: "GET",          cache: false,          dataType: 'script',          url: "/api/v1/get/u2f-registration/null",          complete: function(data){            data;            setTimeout(function() {              console.log("Ready to register");              $('#u2f_status_reg').html(lang_tfa.waiting_usb_register);              u2f.register(appId, registerRequests, registeredKeys, function(deviceResponse) {                var form  = document.getElementById('u2f_reg_form');                var reg   = document.getElementById('u2f_register_data');                console.log("Register callback: ", data);                if (deviceResponse.errorCode && deviceResponse.errorCode != 0) {                  var u2f_return_code = document.getElementById('u2f_return_code');                  u2f_return_code.style.display = u2f_return_code.style.display === 'none' ? '' : null;                  if (deviceResponse.errorCode == "4") {                    deviceResponse.errorCode = "4 - The presented device is not eligible for this request. For a registration request this may mean that the token is already registered, and for a sign request it may mean that the token does not know the presented key handle";                  }                  else if (deviceResponse.errorCode == "5") {                    deviceResponse.errorCode = "5 - Timeout reached before request could be satisfied.";                  }                  u2f_return_code.innerHTML = lang_tfa.error_code + ': ' + deviceResponse.errorCode + ' ' + lang_tfa.reload_retry;                  return;                }                reg.value = JSON.stringify(deviceResponse);                form.submit();              });            }, 1000);          }        });      });    }    if ($(this).val() == "none") {      $('#DisableTFAModal').modal('show');      $("option:selected").prop("selected", false);    }  });    // CSRF  $('<input type="hidden" value="22e130bcab70b1681ab198322bf1e5a5827d729880dd6b7157b10094524cce42">').attr('name', 'csrf_token').appendTo('form');  if (sessionStorage.scrollTop != "undefined") {    $(window).scrollTop(sessionStorage.scrollTop);  }  });</script><div class="container footer">  </div></body></html>